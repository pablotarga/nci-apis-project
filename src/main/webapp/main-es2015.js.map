{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/account-detail/account-detail.component.ts","./src/app/account-detail/account-detail.component.html","./src/app/account-form-base.component.ts","./src/app/account-list/account-list.component.ts","./src/app/account-list/account-list.component.html","./src/app/account-lodgement/account-lodgement.component.ts","./src/app/account-lodgement/account-lodgement.component.html","./src/app/account-new/account-new.component.ts","./src/app/account-new/account-new.component.html","./src/app/account-transfer/account-transfer.component.ts","./src/app/account-transfer/account-transfer.component.html","./src/app/account-withdrawal/account-withdrawal.component.ts","./src/app/account-withdrawal/account-withdrawal.component.html","./src/app/api/api-account.service.ts","./src/app/api/api-auth.service.ts","./src/app/api/api.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authorized/authorized.component.ts","./src/app/authorized/authorized.component.html","./src/app/customer-info/customer-info.component.ts","./src/app/customer-info/customer-info.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/services/system.service.ts","./src/app/transaction-list/transaction-list.component.ts","./src/app/transaction-list/transaction-list.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, Input, SimpleChanges, SimpleChange, OnChanges, ElementRef } from '@angular/core';\nimport { Account } from '../interfaces/account';\nimport { SystemService } from '../services/system.service';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n@Component({\n  selector: 'app-account-detail',\n  templateUrl: './account-detail.component.html',\n  styleUrls: ['./account-detail.component.scss'],\n  animations: [\n    trigger('contentAnimation', [\n      transition(\n        ':enter',\n        [\n          style({\n            opacity: 0,\n            height: 0,\n            display: 'block',\n          }),\n          animate('400ms 200ms ease',\n            style({\n              opacity: 1,\n              display: 'block',\n            })\n          )\n        ]\n      ),\n      transition(\n        ':leave',\n        [\n          style({\n            opacity: 1,\n            display: 'block',\n          }),\n          animate('200ms 0s ease',\n            style({\n              height: 0,\n              opacity: 0,\n            })\n          )\n        ]\n      )\n    ]),\n\n    trigger('balanceTip', [\n      transition(\n        ':enter',\n        [\n          style({\n            opacity: 0,\n            display: 'block',\n          }),\n          animate('600ms 0ms ease',\n            style({\n              opacity: 1,\n              display: 'block',\n            })\n          )\n        ]\n      ),\n      transition(\n        ':leave',\n        [\n          style({\n            opacity: 1,\n          }),\n          animate('600ms 0s ease',\n            style({\n              opacity: 0,\n            })\n          )\n        ]\n      )\n    ]),\n\n\n  ]\n})\nexport class AccountDetailComponent implements OnInit {\n  @Input() account: Account;\n  acc: Account;\n\n  constructor(public s: SystemService) { }\n\n  ngOnInit(): void {\n    this.acc = this.account;\n  }\n\n  close() {\n    this.s.activeForm = null;\n    this.s.activeAccount = null;\n  }\n\n  openForm(name) {\n\n    if (this.s.activeForm === name) {\n      this.s.activeForm = null;\n    } else {\n      this.s.activeForm = name;\n    }\n  }\n\n\n  public get showing(): string {\n    return this.s.activeForm === null ? 'list' : this.s.activeForm;\n  }\n}\n","<div class=\"card card-green v-100 shadow mb-5\">\n  <div class=\"card-body\">\n    <div class=\"d-flex justify-content-between mb-4\">\n      <h5 class=\"card-title\">\n        {{acc.title}}<br />\n        <small>{{acc.sortCode}}</small>\n        <small class=\"ml-2\">{{acc.number}}</small>\n      </h5>\n      <div class=\"ml-auto mr-3 totals\" *ngIf=\"showing != 'list'\" [@balanceTip]>{{acc.balance | currency : 'EUR'}}</div>\n      <div>\n        <fa-icon icon=\"times\" (click)=\"close()\"></fa-icon>\n      </div>\n    </div>\n\n    <div class=\"my-3 d-flex flex-column flex-sm-row\">\n      <span [class.active]=\"showing == 'withdraw'\" class=\"btn flex-fill btn-outline-light d-sm-inline mr-sm-2 mb-2 mb-sm-0\" (click)=\"openForm('withdraw')\">Withdraw</span>\n      <span [class.active]=\"showing == 'lodgement'\" class=\"btn flex-fill btn-outline-light d-sm-inline mr-sm-2 mb-2 mb-sm-0\" (click)=\"openForm('lodgement')\">Lodgement</span>\n      <span [class.active]=\"showing == 'transfer'\" class=\"btn flex-fill btn-outline-light d-sm-inline\" (click)=\"openForm('transfer')\">Transfer</span>\n    </div>\n\n    <div class=\"row content\">\n      <div class=\"col-12\">\n        <app-transaction-list *ngIf=\"showing == 'list'\" [account]=\"acc\" [@contentAnimation]></app-transaction-list>\n        <app-account-withdrawal *ngIf=\"showing == 'withdraw'\" [account]=\"acc\" [@contentAnimation]></app-account-withdrawal>\n        <app-account-lodgement *ngIf=\"showing == 'lodgement'\" [account]=\"acc\" [@contentAnimation]></app-account-lodgement>\n        <app-account-transfer *ngIf=\"showing == 'transfer'\" [account]=\"acc\" [@contentAnimation]></app-account-transfer>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import { Component, OnInit, Input, OnChanges, SimpleChanges, SimpleChange } from '@angular/core';\nimport { Account } from './interfaces/account';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { SystemService } from './services/system.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-account-form-base',\n  template: '<div>This is a test</div>',\n  styles: ['']\n})\nexport class AccountFormBaseComponent implements OnInit, OnChanges {\n  @Input() account: Account;\n  acc: Account;\n  saving = false;\n  form: FormGroup;\n\n  constructor(protected fb: FormBuilder, protected s: SystemService, protected msg: ToastrService) { }\n\n  ngOnInit(): void {\n    this.acc = {} as Account;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const account: SimpleChange = changes.account;\n    if (account.currentValue) {\n      this.acc = account.currentValue;\n    }\n  }\n\n  close() {\n    this.form.reset();\n    this.s.activeForm = null;\n  }\n\n  checkValid(msg) {\n    this.msg.error(msg);\n  }\n\n  submit() { }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SystemService } from '../services/system.service';\n\n@Component({\n  selector: 'app-account-list',\n  templateUrl: './account-list.component.html',\n  styleUrls: ['./account-list.component.scss']\n})\nexport class AccountListComponent implements OnInit {\n\n  constructor(public s: SystemService) { }\n\n  ngOnInit(): void {\n  }\n\n  get total(): number {\n    const list = (this.s.accounts || []);\n\n    if (list.length) {\n      return list.reduce((a, b) => {\n        return { balance: a.balance + b.balance };\n      }).balance;\n    } else {\n      return 0;\n    }\n  }\n}\n","<div class=\"card v-100 shadow mb-5\">\n  <div class=\"card-body\">\n    <div class=\"d-flex justify-content-between mb-4\">\n      <h5 class=\"card-title\">Accounts</h5>\n      <fa-icon icon=\"plus\" (click)=\"s.activeAccount = {}\"></fa-icon>\n    </div>\n\n    <div class=\"account-row d-flex justify-content-between align-items-center py-2\" (click)=\"s.activeAccount = acc\" *ngFor=\"let acc of s.accounts\">\n      <div>\n        {{acc.title}}<br />\n        <small class=\"text-muted\">{{acc.sortCode}}</small>\n        <small class=\"text-muted ml-2\">{{acc.number}}</small>\n      </div>\n      <div class=\"balance\">{{acc.balance | currency : 'EUR'}}</div>\n    </div>\n\n    <div class=\"d-flex justify-content-end align-items-center py-2\">\n      <div class=\"totals mr-3\">Total</div>\n      <div class=\"totals\">{{total | currency : 'EUR'}}</div>\n    </div>\n  </div>\n\n</div>\n","import { Component } from '@angular/core';\nimport { AccountFormBaseComponent } from '../account-form-base.component';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { SystemService } from '../services/system.service';\nimport { ApiAccountService } from '../api/api-account.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-account-lodgement',\n  templateUrl: './account-lodgement.component.html',\n  styleUrls: ['./account-lodgement.component.css']\n})\nexport class AccountLodgementComponent extends AccountFormBaseComponent {\n  form = this.fb.group({\n    amount: ['', [Validators.required, Validators.pattern('[0-9.]*')]],\n    description: ['']\n  });\n\n  constructor(fb: FormBuilder, s: SystemService, msg: ToastrService, private api: ApiAccountService) { super(fb, s, msg); }\n\n\n  submit() {\n    if (this.form.invalid) {\n      this.checkValid('🤑 Inform amount to lodge.');\n      return false;\n    }\n\n    if (this.saving) {\n      return;\n    }\n    this.saving = true;\n\n    this.api.lodge(this.account.id, this.form.value).subscribe((e: any) => {\n      this.account.balance = e.postBalance;\n      this.account.transactions.push(e);\n      this.msg.success('🎉 Money lodged');\n      this.saving = false;\n      this.close();\n    }, (err) => {\n      this.saving = false;\n      this.msg.error('Request not accepted 💩');\n    });\n  }\n\n\n\n}\n","<form [formGroup]=\"form\" (submit)=\"submit()\">\n\n  <div class=\"row gutter-2\">\n    <div class=\"col-12 col-sm-6 py-1\">\n      <label for=\"lodge-description\">Description</label>\n      <input autocomplete=\"off\" id=\"lodge-description\" type=\"text\" class=\"form-control\" formControlName=\"description\" placeholder=\"(optional)\">\n    </div>\n\n    <div class=\"col-12 col-sm-6 py-1\">\n      <label for=\"lodge-amount\">Amount</label>\n      <input autocomplete=\"off\" id=\"lodge-amount\" type=\"text\" class=\"form-control\" formControlName=\"amount\" placeholder=\"0.00\">\n    </div>\n\n    <div class=\"col-12 py-3\">\n      <button type=\"submit\" class=\"btn btn-outline-light\" [class.disabled]=\"form.invalid\">\n        <fa-icon icon=\"euro-sign\" class=\"mr-1\"></fa-icon>\n        Lodge\n      </button>\n      <span (click)=\"close()\" class=\"btn btn-link text-danger\">Cancel</span>\n    </div>\n  </div>\n\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ApiAccountService } from '../api/api-account.service';\nimport { SystemService } from '../services/system.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Account } from '../interfaces/account';\n\n@Component({\n  selector: 'app-account-new',\n  templateUrl: './account-new.component.html',\n  styleUrls: ['./account-new.component.css']\n})\nexport class AccountNewComponent implements OnInit {\n  form = this.fb.group({\n    sortCode: ['', Validators.required],\n    title: ['', Validators.required]\n  });\n  loading = false;\n\n  constructor(private s: SystemService, private fb: FormBuilder, private api: ApiAccountService, private msg: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  close() {\n    this.form.reset();\n    this.s.activeAccount = null;\n  }\n\n  submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.form.invalid) {\n      const err = [];\n\n      if (this.form.get('title').invalid) {\n        err.push('Title');\n      }\n\n      if (this.form.get('sortCode').invalid) {\n        err.push('Sort Code');\n      }\n\n      this.msg.error(`Please inform ${err.join(' and ')}`);\n      return;\n    }\n\n    this.loading = true;\n    this.api.create(this.form.value).subscribe((e: Account) => {\n      this.s.accounts.push(e);\n      this.loading = false;\n      this.close();\n      this.msg.info(`${e.title} created! Sort Code ${e.sortCode} no. ${e.number}`);\n    }, (err) => {\n      this.msg.error('Request not accepted 💩');\n      this.loading = false;\n    });\n  }\n\n}\n","<div class=\"card v-100 shadow mb-5\">\n  <div class=\"card-body\">\n    <div class=\"d-flex justify-content-between mb-4\">\n      <h5 class=\"card-title\">\n        Add New Account\n      </h5>\n      <fa-icon icon=\"times\" (click)=\"close()\"></fa-icon>\n    </div>\n    <form [formGroup]=\"form\" (submit)=\"submit()\">\n      <div class=\"form-group\">\n        <label for=\"\">Title</label>\n        <input type=\"text\" autocomplete=\"off\" formControlName=\"title\" class=\"form-control\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"\">Sort Code</label>\n        <input type=\"text\" autocomplete=\"off\" formControlName=\"sortCode\" class=\"form-control\">\n      </div>\n\n      <div class=\"form-group\">\n        <button type=\"submit\" class=\"btn btn-outline-success\" [class.disabled]=\"form.invalid\">Open Account</button>\n        <span class=\"btn btn-link text-danger\" (click)=\"close()\">Cancel</span>\n      </div>\n\n    </form>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { SystemService } from '../services/system.service';\nimport { AccountFormBaseComponent } from '../account-form-base.component';\nimport { ToastrService } from 'ngx-toastr';\nimport { Account } from '../interfaces/account';\nimport { ApiAccountService } from '../api/api-account.service';\nimport { Transaction } from '../interfaces/transaction';\n\n@Component({\n  selector: 'app-account-transfer',\n  templateUrl: './account-transfer.component.html',\n  styleUrls: ['./account-transfer.component.css']\n})\nexport class AccountTransferComponent extends AccountFormBaseComponent {\n  targetAccount: Account = null;\n  form = this.fb.group({\n    targetid: [''],\n    sortCode: ['', [Validators.required]],\n    number: ['', [Validators.required]],\n    amount: ['', [Validators.required, Validators.pattern('[0-9.]*')]],\n  });\n\n  constructor(fb: FormBuilder, s: SystemService, msg: ToastrService, private api: ApiAccountService) { super(fb, s, msg); }\n\n  get list(): Account[] {\n    return this.s.accounts.filter(e => e.id !== this.s.activeAccount.id);\n  }\n\n  setTarget(a: Account): void {\n    this.targetAccount = a;\n\n    if (a === null) {\n      this.fTarget.clearValidators();\n      this.fTarget.setValue(null);\n\n      this.fSortCode.setValidators([Validators.required]);\n      this.fNumber.setValidators([Validators.required]);\n    } else {\n      this.fTarget.setValidators(Validators.required);\n      this.fTarget.setValue(a.id);\n      this.fSortCode.clearValidators();\n      this.fNumber.clearValidators();\n      this.fSortCode.setValue('');\n      this.fNumber.setValue('');\n    }\n\n    this.fTarget.updateValueAndValidity();\n    this.fSortCode.updateValueAndValidity();\n    this.fNumber.updateValueAndValidity();\n  }\n\n  submit() {\n    if (this.form.invalid) {\n      if (this.fAmount.invalid) {\n        if (this.fAmount.errors.required) {\n          this.msg.error('🚦 Amount is required');\n        } else {\n          this.msg.error('🚦 Amount accepts only digits and \\'.\\'');\n        }\n      }\n\n      if (this.fTarget.invalid || this.fSortCode.invalid || this.fNumber.invalid) {\n        this.msg.error('🚦 Select a target account or fill Sort Code and Number');\n      }\n      return false;\n    }\n\n    if (this.saving) {\n      return;\n    }\n    this.saving = true;\n\n    this.api.transfer(this.account.id, this.form.value).subscribe((e: Transaction[]) => {\n      if (e) {\n        this.s.addTransaction(e[0]);\n        this.s.addTransaction(e[1]);\n\n        this.msg.success('💚💚💚 Transferred with success');\n      } else {\n        this.msg.error('Request not accepted 💩');\n      }\n      this.saving = false;\n      this.close();\n    }, (err) => {\n      this.saving = false;\n      this.msg.error('Request not accepted 💩');\n    });\n\n  }\n\n  get fAmount() {\n    return this.form.get('amount');\n  }\n\n  get fTarget() {\n    return this.form.get('targetid');\n  }\n\n  get fSortCode() {\n    return this.form.get('sortCode');\n  }\n  get fNumber() {\n    return this.form.get('number');\n  }\n}\n","<form [formGroup]=\"form\" (submit)=\"submit()\">\n\n  <div class=\"row gutter-2\">\n    <div class=\"col-8\">\n      <div class=\"form-group\">\n        <label for=\"\">Amount</label>\n        <input type=\"text\" formControlName=\"amount\" placeholder=\"0.00\" class=\"form-control\">\n      </div>\n    </div>\n\n    <div class=\"col-4\">\n      <label>&nbsp;</label>\n      <button type=\"submit\" class=\"btn btn-block btn-outline-light\" [class.disabled]=\"form.invalid\">TRANSFER</button>\n    </div>\n  </div>\n\n\n  <div class=\"form-group\">\n    <label>Target Account</label>\n\n    <div class=\"account-row d-flex justify-content-between align-items-center py-2 clickable\" (click)=\"setTarget(acc)\" *ngFor=\"let acc of list\">\n      <div class=\"mr-3\">\n        <fa-icon [icon]=\"['far', targetAccount == acc ? 'dot-circle' : 'circle']\"></fa-icon>\n      </div>\n      <div class=\"mr-auto\">\n        {{acc.title}}<br />\n        <small class=\"text-white\">{{acc.sortCode}}</small>\n        <small class=\"text-white ml-2\">{{acc.number}}</small>\n      </div>\n      <div class=\"balance\">{{acc.balance | currency : 'EUR'}}</div>\n    </div>\n\n    <div class=\"account-row d-flex justify-content-between align-items-center py-2 clickable\" (click)=\"setTarget(null)\">\n      <div class=\"mr-3\">\n        <fa-icon [icon]=\"['far', targetAccount == null ? 'dot-circle' : 'circle']\"></fa-icon>\n      </div>\n      <div class=\"flex-fill\">\n        <div class=\"row gutter-2\">\n          <div class=\"col-6\">\n            <input type=\"text\" formControlName=\"sortCode\" placeholder=\"Sort Code (00-00-00)...\" class=\"form-control\">\n          </div>\n\n          <div class=\"col-6\">\n            <input type=\"text\" formControlName=\"number\" placeholder=\"Acc. number (00000)...\" class=\"form-control\">\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</form>\n","import { Component } from '@angular/core';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { SystemService } from '../services/system.service';\nimport { AccountFormBaseComponent } from '../account-form-base.component';\nimport { ApiAccountService } from '../api/api-account.service';\nimport { Transaction } from '../interfaces/transaction';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-account-withdrawal',\n  templateUrl: './account-withdrawal.component.html',\n  styleUrls: ['./account-withdrawal.component.scss']\n})\nexport class AccountWithdrawalComponent extends AccountFormBaseComponent {\n  form = this.fb.group({\n    amount: ['', [Validators.required, Validators.pattern('[0-9.]*')]],\n    description: ['']\n  });\n\n  constructor(fb: FormBuilder, s: SystemService, msg: ToastrService, private api: ApiAccountService) { super(fb, s, msg); }\n\n  submit() {\n    if (this.form.invalid) {\n      this.checkValid('💸 Inform amount to withdraw.');\n      return false;\n    }\n\n    if (this.saving) {\n      return;\n    }\n    this.saving = true;\n\n    this.api.withdraw(this.account.id, this.form.value).subscribe((e: Transaction) => {\n      this.account.balance = e.postBalance;\n      this.account.transactions.push(e);\n      this.msg.success('😎🎉 Money withdrawn');\n      this.saving = false;\n      this.close();\n    }, (err) => {\n      this.saving = false;\n      this.msg.error('Request not accepted 💩');\n    });\n  }\n\n}\n","<form [formGroup]=\"form\" (submit)=\"submit()\">\n\n  <div class=\"row gutter-2\">\n    <div class=\"col-12 col-sm-6 py-1\">\n      <label for=\"withdrawal-description\">Description</label>\n      <input autocomplete=\"off\" id=\"withdrawal-description\" type=\"text\" class=\"form-control\" formControlName=\"description\" placeholder=\"(optional)\">\n    </div>\n\n    <div class=\"col-12 col-sm-6 py-1\">\n      <label for=\"withdrawal-amount\">Amount</label>\n      <input autocomplete=\"off\" id=\"withdrawal-amount\" type=\"text\" class=\"form-control\" formControlName=\"amount\" placeholder=\"0.00\">\n    </div>\n\n    <div class=\"col-12 py-3\">\n      <button type=\"submit\" class=\"btn btn-outline-light\" [class.disabled]=\"form.invalid\">\n        <fa-icon icon=\"euro-sign\" class=\"mr-1\"></fa-icon>\n        Withdraw\n      </button>\n      <span (click)=\"close()\" class=\"btn btn-link text-danger\">Cancel</span>\n    </div>\n  </div>\n\n</form>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiService } from './api.service';\nimport { NewTransactionParams } from '../interfaces/new_transaction_params';\nimport { TransferParams } from '../interfaces/transfer_params';\nimport { NewAccountParams } from '../interfaces/new_account_params';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiAccountService extends ApiService {\n  base = 'accounts';\n\n  constructor(httpClient: HttpClient) { super(httpClient); }\n\n  index = () => this.get(null);\n\n  show = (id: number) => this.get(id);\n\n  create = (data: NewAccountParams) => this.post(null, data);\n\n  withdraw = (id: number, data: NewTransactionParams) => this.post(`${id}/withdraw`, data);\n\n  lodge = (id: number, data: NewTransactionParams) => this.post(`${id}/lodge`, data);\n\n  transfer = (id: number, data: TransferParams) => this.post(`${id}/transfer`, data);\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiService } from './api.service';\nimport { RegistrationForm } from '../interfaces/registration-form';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiAuthService extends ApiService {\n  constructor(httpClient: HttpClient) { super(httpClient); }\n\n  login = (email: string, password: string) => this.post('login', { email, password });\n  logout = () => this.delete('logout');\n  register = (form: RegistrationForm) => this.post('register', form);\n  me = () => this.get('me');\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  base: string;\n\n  constructor(protected httpClient: HttpClient) { }\n\n  protected post = (path: string, body: any) => this.httpClient.post(this.getUrl(path), body, {});\n\n  protected put = (path: string, body: any) => this.httpClient.put(this.getUrl(path), body, {});\n\n  protected get = (path: string | number, params?: any) => this.httpClient.get(this.getUrl(path), { params });\n\n  protected delete = (path: string) => this.httpClient.delete(this.getUrl(path), {});\n\n  private getUrl = (path: string | number) => [environment.host, this.base, path].filter(e => e).join('/');\n}\n","import { Component } from '@angular/core';\nimport { SystemService } from './services/system.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  constructor(public s: SystemService) { }\n  title = 'NCI API CA3';\n  subtitle = 'Bank Account HtmlClient';\n}\n","<div class=\"row\">\n  <div id=\"title\" class=\"col-12 mb-3\">\n    <h1>{{title}}</h1>\n    <h2 class=\"text-muted\">{{subtitle}}</h2>\n  </div>\n</div>\n\n<app-authorized *ngIf=\"s.customer; else authComponents\"></app-authorized>\n\n<ng-template #authComponents>\n  <div class=\"row\">\n    <div class=\"col-12 col-md-6\">\n      <app-login></app-login>\n    </div>\n    <div class=\"col-12 col-md-6 mt-5 mt-md-0\">\n      <app-register></app-register>\n    </div>\n  </div>\n</ng-template>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { FontAwesomeModule, FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\n\nimport { AuthorizedComponent } from './authorized/authorized.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { CustomerInfoComponent } from './customer-info/customer-info.component';\nimport { AccountDetailComponent } from './account-detail/account-detail.component';\nimport { AccountListComponent } from './account-list/account-list.component';\nimport { TransactionListComponent } from './transaction-list/transaction-list.component';\nimport { AccountWithdrawalComponent } from './account-withdrawal/account-withdrawal.component';\nimport { AccountLodgementComponent } from './account-lodgement/account-lodgement.component';\nimport { AccountTransferComponent } from './account-transfer/account-transfer.component';\nimport { AccountNewComponent } from './account-new/account-new.component';\n\nimport { ToastrModule } from 'ngx-toastr';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthorizedComponent,\n    LoginComponent,\n    RegisterComponent,\n    CustomerInfoComponent,\n    AccountDetailComponent,\n    AccountListComponent,\n    TransactionListComponent,\n    AccountWithdrawalComponent,\n    AccountLodgementComponent,\n    AccountTransferComponent,\n    AccountNewComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FontAwesomeModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    ToastrModule.forRoot({\n      preventDuplicates: true,\n      countDuplicates: true,\n      resetTimeoutOnDuplicate: true,\n      positionClass: 'toast-bottom-full-width',\n      progressBar: true,\n      // disableTimeOut: true,\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(library: FaIconLibrary) {\n    library.addIconPacks(fas, far);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SystemService } from '../services/system.service';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n@Component({\n  selector: 'app-authorized',\n  templateUrl: './authorized.component.html',\n  styleUrls: ['./authorized.component.scss'],\n  animations: [\n    trigger('inOutAnimation', [\n      transition(\n        ':enter',\n        [\n          style({\n            opacity: 0,\n            height: 0,\n            display: 'block',\n            transform: 'translateY(1rem)'\n          }),\n          animate('600ms 200ms ease-out',\n            style({\n              opacity: 1,\n              display: 'block',\n              transform: 'translateY(0)',\n            })\n          )\n        ]\n      ),\n      transition(\n        ':leave',\n        [\n          style({\n            opacity: 1,\n            display: 'block',\n            transform: 'translateY(0)',\n          }),\n          animate('200ms 0s ease-in',\n            style({\n              height: 0,\n              opacity: 0,\n              // display: 'block',\n              transform: 'translateY(-1rem)',\n            })\n          )\n        ]\n      )\n    ])\n\n  ]\n})\nexport class AuthorizedComponent implements OnInit {\n\n  constructor(public s: SystemService) { }\n  ngOnInit(): void {\n  }\n\n  public get showing(): string {\n    if (this.s.activeAccount === null) {\n      return 'list';\n    } else if (!this.s.activeAccount.id) {\n      return 'new';\n    } else {\n      return 'details';\n    }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-5 col-lg-3\">\n    <app-customer-info></app-customer-info>\n  </div>\n\n  <div class=\"col-md-7 col-lg-9 mt-4 mt-md-0\">\n    <app-account-list *ngIf=\"showing == 'list'\" [@inOutAnimation]></app-account-list>\n    <app-account-detail *ngIf=\"showing == 'details'\" [@inOutAnimation] [account]=\"s.activeAccount\"></app-account-detail>\n    <app-account-new *ngIf=\"showing == 'new'\" [@inOutAnimation]></app-account-new>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { SystemService } from '../services/system.service';\n\n@Component({\n  selector: 'app-customer-info',\n  templateUrl: './customer-info.component.html',\n  styleUrls: ['./customer-info.component.css']\n})\nexport class CustomerInfoComponent implements OnInit {\n\n  constructor(public s: SystemService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card shadow\">\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">Hi, {{s.customer.name}}!</h5>\n    <p class=\"card-text text-muted\">\n      <fa-icon icon=\"envelope\" [fixedWidth]=\"true\"></fa-icon>\n      {{s.customer.email}}<br />\n      <fa-icon icon=\"id-card\" [fixedWidth]=\"true\"></fa-icon>\n      {{(\"\"+s.customer.id).padStart(5, '0')}}<br />\n      <fa-icon icon=\"map-marker-alt\" [fixedWidth]=\"true\"></fa-icon>\n      {{s.customer.address}}<br />\n    </p>\n    <a href=\"#\" class=\"card-link text-danger\" (click)=\"s.logout()\">\n      <fa-icon icon=\"power-off\" [fixedWidth]=\"true\"></fa-icon>\n      Logout\n    </a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { SystemService } from '../services/system.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form = this.fb.group({\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', Validators.required]\n  });\n\n  constructor(private fb: FormBuilder, public s: SystemService) { }\n  ngOnInit(): void { }\n\n  get email(): any { return this.form.get('email'); }\n  get isEmailInvalid(): any {\n    const e = this.email;\n    return e.invalid && (e.dirty || e.touched);\n  }\n\n  get password(): any { return this.form.get('password'); }\n  get isPasswordInvalid(): any {\n    const e = this.password;\n    return e.invalid && (e.dirty || e.touched);\n  }\n}\n","<div class=\"card shadow\">\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">Login</h5>\n    <form [formGroup]=\"form\" (submit)=\"s.login(form.value)\">\n\n      <div class=\"form-group\">\n        <label for=\"\">Email</label>\n        <input type=\"text\" formControlName=\"email\" class=\"form-control\" [class.is-invalid]=\"isEmailInvalid\">\n        <div *ngIf=\"isEmailInvalid && email.errors.required\" class=\"invalid-feedback\">Email is required.</div>\n        <div *ngIf=\"isEmailInvalid && !email.errors.required\" class=\"invalid-feedback\">Invalid Email format.</div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"\">Password</label>\n        <input type=\"password\" autocomplete=\"off\" formControlName=\"password\" class=\"form-control\" [class.is-invalid]=\"isPasswordInvalid\">\n        <div *ngIf=\"isPasswordInvalid && password.errors.required\" class=\"invalid-feedback\">Password is required.</div>\n      </div>\n\n      <div class=\"form-group\">\n        <input type=\"submit\" value=\"Login\" class=\"btn btn-primary\" [disabled]=\"s.authenticating || this.form.invalid\" />\n      </div>\n\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { SystemService } from '../services/system.service';\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  form = this.fb.group({\n    name: ['', Validators.required],\n    sortCode: ['', Validators.required],\n    address: ['', Validators.required],\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', Validators.required]\n  });\n  constructor(private fb: FormBuilder, public s: SystemService) { }\n\n  ngOnInit(): void { }\n\n  get name(): any { return this.form.get('name'); }\n  get isNameInvalid(): boolean {\n    return this.showInvalidControl(this.name);\n  }\n\n  get sortCode(): any { return this.form.get('sortCode'); }\n  get isSortCodeInvalid(): boolean {\n    return this.showInvalidControl(this.sortCode);\n  }\n\n  get address(): any { return this.form.get('address'); }\n  get isAddressInvalid(): boolean {\n    return this.showInvalidControl(this.address);\n  }\n\n  get email(): any { return this.form.get('email'); }\n  get isEmailInvalid(): boolean {\n    return this.showInvalidControl(this.email);\n  }\n\n  get password(): any { return this.form.get('password'); }\n  get isPasswordInvalid(): boolean {\n    return this.showInvalidControl(this.password);\n  }\n\n  private showInvalidControl(e: FormControl): boolean {\n    return e.invalid && (e.dirty || e.touched);\n  }\n\n}\n","<div class=\"card shadow\">\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">New Customer</h5>\n    <form [formGroup]=\"form\" (submit)=\"s.register(form.value)\">\n\n      <div class=\"form-group\">\n        <label for=\"\">Name</label>\n        <input type=\"text\" formControlName=\"name\" class=\"form-control\" [class.is-invalid]=\"isNameInvalid\">\n        <div *ngIf=\"isNameInvalid && name.errors.required\" class=\"invalid-feedback\">Name is required.</div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"\">Sort Code</label>\n        <input type=\"text\" formControlName=\"sortCode\" class=\"form-control\" [class.is-invalid]=\"isSortCodeInvalid\">\n        <div *ngIf=\"isSortCodeInvalid && sortCode.errors.required\" class=\"invalid-feedback\">Sort Code is required.</div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"\">Address</label>\n        <input type=\"text\" formControlName=\"address\" class=\"form-control\" [class.is-invalid]=\"isAddressInvalid\">\n        <div *ngIf=\"isAddressInvalid && address.errors.required\" class=\"invalid-feedback\">Address is required.</div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"\">Email</label>\n        <input type=\"text\" formControlName=\"email\" class=\"form-control\" [class.is-invalid]=\"isEmailInvalid\">\n        <div *ngIf=\"isEmailInvalid && email.errors.required\" class=\"invalid-feedback\">Email is required.</div>\n        <div *ngIf=\"isEmailInvalid && !email.errors.required\" class=\"invalid-feedback\">Invalid Email format.</div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"\">Password</label>\n        <input type=\"password\" autocomplete=\"off\" formControlName=\"password\" class=\"form-control\" [class.is-invalid]=\"isPasswordInvalid\">\n        <div *ngIf=\"isPasswordInvalid && password.errors.required\" class=\"invalid-feedback\">Password is required.</div>\n      </div>\n\n      <div class=\"form-group\">\n        <input type=\"submit\" value=\"Create Account\" class=\"btn btn-primary\" [disabled]=\"s.authenticating || this.form.invalid\" />\n      </div>\n\n    </form>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ApiAuthService } from '../api/api-auth.service';\nimport { LoginForm } from '../interfaces/login-form';\nimport { RegistrationForm } from '../interfaces/registration-form';\nimport { ApiAccountService } from '../api/api-account.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Transaction } from '../interfaces/transaction';\nimport { Account } from '../interfaces/account';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SystemService {\n  public authenticating = false;\n  public loading = false;\n  public loadingAccounts = false;\n  public customer = null;\n  public accounts = [];\n  public activeAccount = null;\n  public activeForm = null;\n\n  constructor(\n    private authApi: ApiAuthService,\n    private accApi: ApiAccountService,\n    private msg: ToastrService,\n\n  ) {\n    this.authenticating = true;\n    this.authApi.me().subscribe((e) => {\n      this.customer = e;\n      this.authenticating = false;\n      this.loadAccounts();\n    }, (err) => {\n      if (err.status === 0) {\n        this.msg.warning('Server not responding activating FAKE data 🤪🤪🤪');\n        this.mock();\n      }\n      this.authenticating = false;\n    });\n  }\n\n  login = (data: LoginForm) => {\n    if (this.authenticating) {\n      return;\n    }\n\n    this.authenticating = true;\n    this.clearAll();\n\n    this.authApi.login(data.email, data.password).subscribe((e: any) => {\n      this.customer = e;\n      this.loadAccounts();\n      this.authenticating = false;\n      this.msg.success('🤘 awesome!');\n    }, (err) => {\n      this.msg.error('Invalid Email/Password 🚫');\n      this.authenticating = false;\n    });\n  }\n\n  register = (data: RegistrationForm) => {\n    if (this.authenticating) {\n      return;\n    }\n\n    this.authenticating = true;\n    this.clearAll();\n\n    this.authApi.register(data).subscribe((e) => {\n      this.customer = e;\n      this.loadAccounts();\n      this.msg.success('Welcome aboard 👨‍✈️');\n      this.authenticating = false;\n    }, (err) => {\n      this.authenticating = false;\n      this.msg.error('Request not accepted 💩');\n    });\n  }\n\n  logout = () => {\n    this.authApi.logout().subscribe(e => console.log('Logged out!'));\n    this.clearAll();\n    this.msg.info('Your cookie was destroyed');\n  }\n\n  addTransaction(t: Transaction) {\n    if (t == null) {\n      return;\n    }\n\n    const acc = this.findAccountById(t.accountID);\n    if (acc == null) {\n      return;\n    }\n\n    acc.balance = t.postBalance;\n    acc.transactions.push(t);\n  }\n\n  private findAccountById(id: number): Account {\n    for (const acc of this.accounts) {\n      if (+acc.id === +id) {\n        return acc;\n      }\n    }\n\n    return null;\n  }\n\n  private clearAll = () => {\n    this.customer = null;\n    this.accounts = [];\n    this.activeAccount = null;\n    this.activeForm = null;\n  }\n\n  private loadAccounts = () => {\n    if (this.loadingAccounts) {\n      return;\n    }\n\n    this.loadingAccounts = true;\n    this.accApi.index().subscribe((e) => {\n      this.accounts = e as any;\n      this.loadingAccounts = false;\n    }, (err) => {\n      this.loadingAccounts = false;\n    });\n  }\n\n  private loadTransactions = (accountID) => {\n    this.loading = true;\n\n    setTimeout(() => {\n      return this.loading = false;\n    }, 3000);\n  }\n\n  private mock() {\n    this.customer = {\n      address: '25 Talbot St',\n      email: 'john@student.ncirl.ie',\n      id: 1,\n      name: 'John Doe',\n      password: 'Yjk5d53JESdHv5k/rI6Tq/wSkHY=.1GwRmuF4kNs='\n    };\n\n    this.accounts = [\n      {\n        id: 1,\n        customerID: 1,\n        sortCode: '90-30-66',\n        number: '00001',\n        balance: 34.56,\n        title: 'Current Account',\n        transactions: [\n          { id: 123, accountID: 1, type: 'c', created: new Date(2020, 3, 1, 14, 34), amount: 200.00, postBalance: 200.00, description: 'Account opening' },\n          { id: 124, accountID: 1, type: 'c', created: new Date(2020, 3, 5, 14, 34), amount: 20.00, postBalance: 220.00, description: 'Lodgement' },\n          { id: 125, accountID: 1, type: 'd', created: new Date(2020, 3, 6, 10, 20), amount: 123.00, postBalance: 97.00, description: 'Withdrawal' },\n          { id: 126, accountID: 1, type: 'd', created: new Date(2020, 3, 7, 22, 0), amount: 15.00, postBalance: 84.00, description: 'Tesco Stores' },\n          { id: 126, accountID: 1, type: 'd', created: new Date(2020, 3, 9, 10, 0), amount: 49.44, postBalance: 34.56, description: 'Annual Subscription' },\n        ],\n      },\n      {\n        id: 2,\n        customerID: 1,\n        sortCode: '90-30-66',\n        number: '00002',\n        balance: 402.34,\n        title: 'Savings',\n        transactions: [\n          { id: 223, accountID: 2, type: 'c', created: new Date(2020, 1, 1, 10, 0), amount: 200.00, postBalance: 200.00, description: 'Deposit' },\n          { id: 224, accountID: 2, type: 'c', created: new Date(2020, 2, 1, 10, 0), amount: 200.00, postBalance: 400.00, description: 'Deposit' },\n          { id: 225, accountID: 2, type: 'c', created: new Date(2020, 2, 1, 10, 0), amount: 2.34, postBalance: 402.34, description: 'Interest' },\n        ],\n      },\n      {\n        id: 3,\n        customerID: 1,\n        sortCode: '90-30-66',\n        number: '00003',\n        balance: 4024.68,\n        title: 'Investments',\n        transactions: [],\n      },\n      {\n        id: 4,\n        customerID: 1,\n        sortCode: '90-30-66',\n        number: '00004',\n        balance: 76.34,\n        title: 'Other',\n        transactions: [],\n      }\n    ];\n\n    // this.activeAccount = this.accounts[1];\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Account } from '../interfaces/account';\n\n@Component({\n  selector: 'app-transaction-list',\n  templateUrl: './transaction-list.component.html',\n  styleUrls: ['./transaction-list.component.scss']\n})\nexport class TransactionListComponent implements OnInit {\n  @Input() account: Account;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"account-row d-flex justify-content-between align-items-center py-2\" *ngFor=\"let entry of account.transactions\">\n  <div>\n    {{entry.description}}<br />\n    <small class=\"text-white\">{{entry.created | date : 'dd/LL/yyyy HH:mm' }}</small>\n  </div>\n  <div class=\"text-right\">\n    <span class=\"balance\" [class.text-danger]=\"entry.type == 'd'\">\n      <span>{{entry.type == 'c' ? '+' : '-'}}</span>\n      <span>{{entry.amount | currency : 'EUR'}}</span>\n      <br />\n    </span>\n    <small class=\"font-weight-lighter\">{{entry.postBalance | currency : 'EUR'}}</small>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-end align-items-center py-2\">\n  <div class=\"totals mr-3\">Balance</div>\n  <div class=\"totals\">{{account.balance | currency : 'EUR'}}</div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  host: 'http://localhost:49000/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}