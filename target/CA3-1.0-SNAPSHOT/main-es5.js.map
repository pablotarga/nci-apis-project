{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/account-detail/account-detail.component.ts","webpack:///src/app/account-detail/account-detail.component.html","webpack:///src/app/account-form-base.component.ts","webpack:///src/app/account-list/account-list.component.ts","webpack:///src/app/account-list/account-list.component.html","webpack:///src/app/account-lodgement/account-lodgement.component.ts","webpack:///src/app/account-lodgement/account-lodgement.component.html","webpack:///src/app/account-new/account-new.component.ts","webpack:///src/app/account-new/account-new.component.html","webpack:///src/app/account-transfer/account-transfer.component.ts","webpack:///src/app/account-transfer/account-transfer.component.html","webpack:///src/app/account-withdrawal/account-withdrawal.component.ts","webpack:///src/app/account-withdrawal/account-withdrawal.component.html","webpack:///src/app/api/api-account.service.ts","webpack:///src/app/api/api-auth.service.ts","webpack:///src/app/api/api.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/authorized/authorized.component.ts","webpack:///src/app/authorized/authorized.component.html","webpack:///src/app/customer-info/customer-info.component.ts","webpack:///src/app/customer-info/customer-info.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/services/system.service.ts","webpack:///src/app/transaction-list/transaction-list.component.ts","webpack:///src/app/transaction-list/transaction-list.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AccountDetailComponent","s","acc","account","activeForm","activeAccount","name","close","openForm","opacity","height","display","selector","templateUrl","styleUrls","animations","AccountFormBaseComponent","fb","msg","saving","changes","currentValue","form","reset","error","template","styles","AccountListComponent","list","accounts","length","reduce","a","b","balance","AccountLodgementComponent","api","group","amount","required","pattern","description","invalid","checkValid","lodge","value","subscribe","postBalance","transactions","push","success","err","submit","AccountNewComponent","sortCode","title","loading","get","join","create","info","number","AccountTransferComponent","targetAccount","targetid","fTarget","clearValidators","setValue","fSortCode","setValidators","fNumber","updateValueAndValidity","fAmount","errors","transfer","addTransaction","filter","setTarget","AccountWithdrawalComponent","withdraw","ApiAccountService","httpClient","base","index","show","data","post","providedIn","ApiAuthService","login","email","password","logout","register","me","ApiService","path","body","getUrl","put","params","host","AppComponent","subtitle","AppModule","library","addIconPacks","forRoot","preventDuplicates","countDuplicates","resetTimeoutOnDuplicate","positionClass","progressBar","declarations","imports","providers","bootstrap","AuthorizedComponent","transform","CustomerInfoComponent","LoginComponent","dirty","touched","RegisterComponent","address","showInvalidControl","SystemService","authApi","accApi","authenticating","loadingAccounts","customer","clearAll","loadAccounts","console","log","loadTransactions","accountID","setTimeout","status","warning","mock","t","findAccountById","customerID","type","created","Date","TransactionListComponent","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, Input, SimpleChanges, SimpleChange, OnChanges, ElementRef } from '@angular/core';\nimport { Account } from '../interfaces/account';\nimport { SystemService } from '../services/system.service';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n@Component({\n  selector: 'app-account-detail',\n  templateUrl: './account-detail.component.html',\n  styleUrls: ['./account-detail.component.scss'],\n  animations: [\n    trigger('contentAnimation', [\n      transition(\n        ':enter',\n        [\n          style({\n            opacity: 0,\n            height: 0,\n            display: 'block',\n          }),\n          animate('400ms 200ms ease',\n            style({\n              opacity: 1,\n              display: 'block',\n            })\n          )\n        ]\n      ),\n      transition(\n        ':leave',\n        [\n          style({\n            opacity: 1,\n            display: 'block',\n          }),\n          animate('200ms 0s ease',\n            style({\n              height: 0,\n              opacity: 0,\n            })\n          )\n        ]\n      )\n    ]),\n\n    trigger('balanceTip', [\n      transition(\n        ':enter',\n        [\n          style({\n            opacity: 0,\n            display: 'block',\n          }),\n          animate('600ms 0ms ease',\n            style({\n              opacity: 1,\n              display: 'block',\n            })\n          )\n        ]\n      ),\n      transition(\n        ':leave',\n        [\n          style({\n            opacity: 1,\n          }),\n          animate('600ms 0s ease',\n            style({\n              opacity: 0,\n            })\n          )\n        ]\n      )\n    ]),\n\n\n  ]\n})\nexport class AccountDetailComponent implements OnInit {\n  @Input() account: Account;\n  acc: Account;\n\n  constructor(public s: SystemService) { }\n\n  ngOnInit(): void {\n    this.acc = this.account;\n  }\n\n  close() {\n    this.s.activeForm = null;\n    this.s.activeAccount = null;\n  }\n\n  openForm(name) {\n\n    if (this.s.activeForm === name) {\n      this.s.activeForm = null;\n    } else {\n      this.s.activeForm = name;\n    }\n  }\n\n\n  public get showing(): string {\n    return this.s.activeForm === null ? 'list' : this.s.activeForm;\n  }\n}\n","<div class=\"card card-green v-100 shadow mb-5\">\n  <div class=\"card-body\">\n    <div class=\"d-flex justify-content-between mb-4\">\n      <h5 class=\"card-title\">\n        {{acc.title}}<br />\n        <small>{{acc.sortCode}}</small>\n        <small class=\"ml-2\">{{acc.number}}</small>\n      </h5>\n      <div class=\"ml-auto mr-3 totals\" *ngIf=\"showing != 'list'\" [@balanceTip]>{{acc.balance | currency : 'EUR'}}</div>\n      <div>\n        <fa-icon icon=\"times\" (click)=\"close()\"></fa-icon>\n      </div>\n    </div>\n\n    <div class=\"my-3 d-flex flex-column flex-sm-row\">\n      <span [class.active]=\"showing == 'withdraw'\" class=\"btn flex-fill btn-outline-light d-sm-inline mr-sm-2 mb-2 mb-sm-0\" (click)=\"openForm('withdraw')\">Withdraw</span>\n      <span [class.active]=\"showing == 'lodgement'\" class=\"btn flex-fill btn-outline-light d-sm-inline mr-sm-2 mb-2 mb-sm-0\" (click)=\"openForm('lodgement')\">Lodgement</span>\n      <span [class.active]=\"showing == 'transfer'\" class=\"btn flex-fill btn-outline-light d-sm-inline\" (click)=\"openForm('transfer')\">Transfer</span>\n    </div>\n\n    <div class=\"row content\">\n      <div class=\"col-12\">\n        <app-transaction-list *ngIf=\"showing == 'list'\" [account]=\"acc\" [@contentAnimation]></app-transaction-list>\n        <app-account-withdrawal *ngIf=\"showing == 'withdraw'\" [account]=\"acc\" [@contentAnimation]></app-account-withdrawal>\n        <app-account-lodgement *ngIf=\"showing == 'lodgement'\" [account]=\"acc\" [@contentAnimation]></app-account-lodgement>\n        <app-account-transfer *ngIf=\"showing == 'transfer'\" [account]=\"acc\" [@contentAnimation]></app-account-transfer>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import { Component, OnInit, Input, OnChanges, SimpleChanges, SimpleChange } from '@angular/core';\nimport { Account } from './interfaces/account';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { SystemService } from './services/system.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-account-form-base',\n  template: '<div>This is a test</div>',\n  styles: ['']\n})\nexport class AccountFormBaseComponent implements OnInit, OnChanges {\n  @Input() account: Account;\n  acc: Account;\n  saving = false;\n  form: FormGroup;\n\n  constructor(protected fb: FormBuilder, protected s: SystemService, protected msg: ToastrService) { }\n\n  ngOnInit(): void {\n    this.acc = {} as Account;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const account: SimpleChange = changes.account;\n    if (account.currentValue) {\n      this.acc = account.currentValue;\n    }\n  }\n\n  close() {\n    this.form.reset();\n    this.s.activeForm = null;\n  }\n\n  checkValid(msg) {\n    this.msg.error(msg);\n  }\n\n  submit() { }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SystemService } from '../services/system.service';\n\n@Component({\n  selector: 'app-account-list',\n  templateUrl: './account-list.component.html',\n  styleUrls: ['./account-list.component.scss']\n})\nexport class AccountListComponent implements OnInit {\n\n  constructor(public s: SystemService) { }\n\n  ngOnInit(): void {\n  }\n\n  get total(): number {\n    const list = (this.s.accounts || []);\n\n    if (list.length) {\n      return list.reduce((a, b) => {\n        return { balance: a.balance + b.balance };\n      }).balance;\n    } else {\n      return 0;\n    }\n  }\n}\n","<div class=\"card v-100 shadow mb-5\">\n  <div class=\"card-body\">\n    <div class=\"d-flex justify-content-between mb-4\">\n      <h5 class=\"card-title\">Accounts</h5>\n      <fa-icon icon=\"plus\" (click)=\"s.activeAccount = {}\"></fa-icon>\n    </div>\n\n    <div class=\"account-row d-flex justify-content-between align-items-center py-2\" (click)=\"s.activeAccount = acc\" *ngFor=\"let acc of s.accounts\">\n      <div>\n        {{acc.title}}<br />\n        <small class=\"text-muted\">{{acc.sortCode}}</small>\n        <small class=\"text-muted ml-2\">{{acc.number}}</small>\n      </div>\n      <div class=\"balance\">{{acc.balance | currency : 'EUR'}}</div>\n    </div>\n\n    <div class=\"d-flex justify-content-end align-items-center py-2\">\n      <div class=\"totals mr-3\">Total</div>\n      <div class=\"totals\">{{total | currency : 'EUR'}}</div>\n    </div>\n  </div>\n\n</div>\n","import { Component } from '@angular/core';\nimport { AccountFormBaseComponent } from '../account-form-base.component';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { SystemService } from '../services/system.service';\nimport { ApiAccountService } from '../api/api-account.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-account-lodgement',\n  templateUrl: './account-lodgement.component.html',\n  styleUrls: ['./account-lodgement.component.css']\n})\nexport class AccountLodgementComponent extends AccountFormBaseComponent {\n  form = this.fb.group({\n    amount: ['', [Validators.required, Validators.pattern('[0-9.]*')]],\n    description: ['']\n  });\n\n  constructor(fb: FormBuilder, s: SystemService, msg: ToastrService, private api: ApiAccountService) { super(fb, s, msg); }\n\n\n  submit() {\n    if (this.form.invalid) {\n      this.checkValid('🤑 Inform amount to lodge.');\n      return false;\n    }\n\n    if (this.saving) {\n      return;\n    }\n    this.saving = true;\n\n    this.api.lodge(this.account.id, this.form.value).subscribe((e: any) => {\n      this.account.balance = e.postBalance;\n      this.account.transactions.push(e);\n      this.msg.success('🎉 Money lodged');\n      this.saving = false;\n      this.close();\n    }, (err) => {\n      this.saving = false;\n      this.msg.error('Request not accepted 💩');\n    });\n  }\n\n\n\n}\n","<form [formGroup]=\"form\" (submit)=\"submit()\">\n\n  <div class=\"row gutter-2\">\n    <div class=\"col-12 col-sm-6 py-1\">\n      <label for=\"lodge-description\">Description</label>\n      <input autocomplete=\"off\" id=\"lodge-description\" type=\"text\" class=\"form-control\" formControlName=\"description\" placeholder=\"(optional)\">\n    </div>\n\n    <div class=\"col-12 col-sm-6 py-1\">\n      <label for=\"lodge-amount\">Amount</label>\n      <input autocomplete=\"off\" id=\"lodge-amount\" type=\"text\" class=\"form-control\" formControlName=\"amount\" placeholder=\"0.00\">\n    </div>\n\n    <div class=\"col-12 py-3\">\n      <button type=\"submit\" class=\"btn btn-outline-light\" [class.disabled]=\"form.invalid\">\n        <fa-icon icon=\"euro-sign\" class=\"mr-1\"></fa-icon>\n        Lodge\n      </button>\n      <span (click)=\"close()\" class=\"btn btn-link text-danger\">Cancel</span>\n    </div>\n  </div>\n\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ApiAccountService } from '../api/api-account.service';\nimport { SystemService } from '../services/system.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Account } from '../interfaces/account';\n\n@Component({\n  selector: 'app-account-new',\n  templateUrl: './account-new.component.html',\n  styleUrls: ['./account-new.component.css']\n})\nexport class AccountNewComponent implements OnInit {\n  form = this.fb.group({\n    sortCode: ['', Validators.required],\n    title: ['', Validators.required]\n  });\n  loading = false;\n\n  constructor(private s: SystemService, private fb: FormBuilder, private api: ApiAccountService, private msg: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  close() {\n    this.form.reset();\n    this.s.activeAccount = null;\n  }\n\n  submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.form.invalid) {\n      const err = [];\n\n      if (this.form.get('title').invalid) {\n        err.push('Title');\n      }\n\n      if (this.form.get('sortCode').invalid) {\n        err.push('Sort Code');\n      }\n\n      this.msg.error(`Please inform ${err.join(' and ')}`);\n      return;\n    }\n\n    this.loading = true;\n    this.api.create(this.form.value).subscribe((e: Account) => {\n      this.s.accounts.push(e);\n      this.loading = false;\n      this.close();\n      this.msg.info(`${e.title} created! Sort Code ${e.sortCode} no. ${e.number}`);\n    }, (err) => {\n      this.msg.error('Request not accepted 💩');\n      this.loading = false;\n    });\n  }\n\n}\n","<div class=\"card v-100 shadow mb-5\">\n  <div class=\"card-body\">\n    <div class=\"d-flex justify-content-between mb-4\">\n      <h5 class=\"card-title\">\n        Add New Account\n      </h5>\n      <fa-icon icon=\"times\" (click)=\"close()\"></fa-icon>\n    </div>\n    <form [formGroup]=\"form\" (submit)=\"submit()\">\n      <div class=\"form-group\">\n        <label for=\"\">Title</label>\n        <input type=\"text\" autocomplete=\"off\" formControlName=\"title\" class=\"form-control\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"\">Sort Code</label>\n        <input type=\"text\" autocomplete=\"off\" formControlName=\"sortCode\" class=\"form-control\">\n      </div>\n\n      <div class=\"form-group\">\n        <button type=\"submit\" class=\"btn btn-outline-success\" [class.disabled]=\"form.invalid\">Open Account</button>\n        <span class=\"btn btn-link text-danger\" (click)=\"close()\">Cancel</span>\n      </div>\n\n    </form>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { SystemService } from '../services/system.service';\nimport { AccountFormBaseComponent } from '../account-form-base.component';\nimport { ToastrService } from 'ngx-toastr';\nimport { Account } from '../interfaces/account';\nimport { ApiAccountService } from '../api/api-account.service';\nimport { Transaction } from '../interfaces/transaction';\n\n@Component({\n  selector: 'app-account-transfer',\n  templateUrl: './account-transfer.component.html',\n  styleUrls: ['./account-transfer.component.css']\n})\nexport class AccountTransferComponent extends AccountFormBaseComponent {\n  targetAccount: Account = null;\n  form = this.fb.group({\n    targetid: [''],\n    sortCode: ['', [Validators.required]],\n    number: ['', [Validators.required]],\n    amount: ['', [Validators.required, Validators.pattern('[0-9.]*')]],\n  });\n\n  constructor(fb: FormBuilder, s: SystemService, msg: ToastrService, private api: ApiAccountService) { super(fb, s, msg); }\n\n  get list(): Account[] {\n    return this.s.accounts.filter(e => e.id !== this.s.activeAccount.id);\n  }\n\n  setTarget(a: Account): void {\n    this.targetAccount = a;\n\n    if (a === null) {\n      this.fTarget.clearValidators();\n      this.fTarget.setValue(null);\n\n      this.fSortCode.setValidators([Validators.required]);\n      this.fNumber.setValidators([Validators.required]);\n    } else {\n      this.fTarget.setValidators(Validators.required);\n      this.fTarget.setValue(a.id);\n      this.fSortCode.clearValidators();\n      this.fNumber.clearValidators();\n      this.fSortCode.setValue('');\n      this.fNumber.setValue('');\n    }\n\n    this.fTarget.updateValueAndValidity();\n    this.fSortCode.updateValueAndValidity();\n    this.fNumber.updateValueAndValidity();\n  }\n\n  submit() {\n    if (this.form.invalid) {\n      if (this.fAmount.invalid) {\n        if (this.fAmount.errors.required) {\n          this.msg.error('🚦 Amount is required');\n        } else {\n          this.msg.error('🚦 Amount accepts only digits and \\'.\\'');\n        }\n      }\n\n      if (this.fTarget.invalid || this.fSortCode.invalid || this.fNumber.invalid) {\n        this.msg.error('🚦 Select a target account or fill Sort Code and Number');\n      }\n      return false;\n    }\n\n    if (this.saving) {\n      return;\n    }\n    this.saving = true;\n\n    this.api.transfer(this.account.id, this.form.value).subscribe((e: Transaction[]) => {\n      if (e) {\n        this.s.addTransaction(e[0]);\n        this.s.addTransaction(e[1]);\n\n        this.msg.success('💚💚💚 Transferred with success');\n      } else {\n        this.msg.error('Request not accepted 💩');\n      }\n      this.saving = false;\n      this.close();\n    }, (err) => {\n      this.saving = false;\n      this.msg.error('Request not accepted 💩');\n    });\n\n  }\n\n  get fAmount() {\n    return this.form.get('amount');\n  }\n\n  get fTarget() {\n    return this.form.get('targetid');\n  }\n\n  get fSortCode() {\n    return this.form.get('sortCode');\n  }\n  get fNumber() {\n    return this.form.get('number');\n  }\n}\n","<form [formGroup]=\"form\" (submit)=\"submit()\">\n\n  <div class=\"row gutter-2\">\n    <div class=\"col-8\">\n      <div class=\"form-group\">\n        <label for=\"\">Amount</label>\n        <input type=\"text\" formControlName=\"amount\" placeholder=\"0.00\" class=\"form-control\">\n      </div>\n    </div>\n\n    <div class=\"col-4\">\n      <label>&nbsp;</label>\n      <button type=\"submit\" class=\"btn btn-block btn-outline-light\" [class.disabled]=\"form.invalid\">TRANSFER</button>\n    </div>\n  </div>\n\n\n  <div class=\"form-group\">\n    <label>Target Account</label>\n\n    <div class=\"account-row d-flex justify-content-between align-items-center py-2 clickable\" (click)=\"setTarget(acc)\" *ngFor=\"let acc of list\">\n      <div class=\"mr-3\">\n        <fa-icon [icon]=\"['far', targetAccount == acc ? 'dot-circle' : 'circle']\"></fa-icon>\n      </div>\n      <div class=\"mr-auto\">\n        {{acc.title}}<br />\n        <small class=\"text-white\">{{acc.sortCode}}</small>\n        <small class=\"text-white ml-2\">{{acc.number}}</small>\n      </div>\n      <div class=\"balance\">{{acc.balance | currency : 'EUR'}}</div>\n    </div>\n\n    <div class=\"account-row d-flex justify-content-between align-items-center py-2 clickable\" (click)=\"setTarget(null)\">\n      <div class=\"mr-3\">\n        <fa-icon [icon]=\"['far', targetAccount == null ? 'dot-circle' : 'circle']\"></fa-icon>\n      </div>\n      <div class=\"flex-fill\">\n        <div class=\"row gutter-2\">\n          <div class=\"col-6\">\n            <input type=\"text\" formControlName=\"sortCode\" placeholder=\"Sort Code (00-00-00)...\" class=\"form-control\">\n          </div>\n\n          <div class=\"col-6\">\n            <input type=\"text\" formControlName=\"number\" placeholder=\"Acc. number (00000)...\" class=\"form-control\">\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</form>\n","import { Component } from '@angular/core';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { SystemService } from '../services/system.service';\nimport { AccountFormBaseComponent } from '../account-form-base.component';\nimport { ApiAccountService } from '../api/api-account.service';\nimport { Transaction } from '../interfaces/transaction';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-account-withdrawal',\n  templateUrl: './account-withdrawal.component.html',\n  styleUrls: ['./account-withdrawal.component.scss']\n})\nexport class AccountWithdrawalComponent extends AccountFormBaseComponent {\n  form = this.fb.group({\n    amount: ['', [Validators.required, Validators.pattern('[0-9.]*')]],\n    description: ['']\n  });\n\n  constructor(fb: FormBuilder, s: SystemService, msg: ToastrService, private api: ApiAccountService) { super(fb, s, msg); }\n\n  submit() {\n    if (this.form.invalid) {\n      this.checkValid('💸 Inform amount to withdraw.');\n      return false;\n    }\n\n    if (this.saving) {\n      return;\n    }\n    this.saving = true;\n\n    this.api.withdraw(this.account.id, this.form.value).subscribe((e: Transaction) => {\n      this.account.balance = e.postBalance;\n      this.account.transactions.push(e);\n      this.msg.success('😎🎉 Money withdrawn');\n      this.saving = false;\n      this.close();\n    }, (err) => {\n      this.saving = false;\n      this.msg.error('Request not accepted 💩');\n    });\n  }\n\n}\n","<form [formGroup]=\"form\" (submit)=\"submit()\">\n\n  <div class=\"row gutter-2\">\n    <div class=\"col-12 col-sm-6 py-1\">\n      <label for=\"withdrawal-description\">Description</label>\n      <input autocomplete=\"off\" id=\"withdrawal-description\" type=\"text\" class=\"form-control\" formControlName=\"description\" placeholder=\"(optional)\">\n    </div>\n\n    <div class=\"col-12 col-sm-6 py-1\">\n      <label for=\"withdrawal-amount\">Amount</label>\n      <input autocomplete=\"off\" id=\"withdrawal-amount\" type=\"text\" class=\"form-control\" formControlName=\"amount\" placeholder=\"0.00\">\n    </div>\n\n    <div class=\"col-12 py-3\">\n      <button type=\"submit\" class=\"btn btn-outline-light\" [class.disabled]=\"form.invalid\">\n        <fa-icon icon=\"euro-sign\" class=\"mr-1\"></fa-icon>\n        Withdraw\n      </button>\n      <span (click)=\"close()\" class=\"btn btn-link text-danger\">Cancel</span>\n    </div>\n  </div>\n\n</form>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiService } from './api.service';\nimport { NewTransactionParams } from '../interfaces/new_transaction_params';\nimport { TransferParams } from '../interfaces/transfer_params';\nimport { NewAccountParams } from '../interfaces/new_account_params';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiAccountService extends ApiService {\n  base = 'accounts';\n\n  constructor(httpClient: HttpClient) { super(httpClient); }\n\n  index = () => this.get(null);\n\n  show = (id: number) => this.get(id);\n\n  create = (data: NewAccountParams) => this.post(null, data);\n\n  withdraw = (id: number, data: NewTransactionParams) => this.post(`${id}/withdraw`, data);\n\n  lodge = (id: number, data: NewTransactionParams) => this.post(`${id}/lodge`, data);\n\n  transfer = (id: number, data: TransferParams) => this.post(`${id}/transfer`, data);\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiService } from './api.service';\nimport { RegistrationForm } from '../interfaces/registration-form';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiAuthService extends ApiService {\n  constructor(httpClient: HttpClient) { super(httpClient); }\n\n  login = (email: string, password: string) => this.post('login', { email, password });\n  logout = () => this.delete('logout');\n  register = (form: RegistrationForm) => this.post('register', form);\n  me = () => this.get('me');\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  base: string;\n\n  constructor(protected httpClient: HttpClient) { }\n\n  protected post = (path: string, body: any) => this.httpClient.post(this.getUrl(path), body, {});\n\n  protected put = (path: string, body: any) => this.httpClient.put(this.getUrl(path), body, {});\n\n  protected get = (path: string | number, params?: any) => this.httpClient.get(this.getUrl(path), { params });\n\n  protected delete = (path: string) => this.httpClient.delete(this.getUrl(path), {});\n\n  private getUrl = (path: string | number) => [environment.host, this.base, path].filter(e => e).join('/');\n}\n","import { Component } from '@angular/core';\nimport { SystemService } from './services/system.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  constructor(public s: SystemService) { }\n  title = 'NCI API CA3';\n  subtitle = 'Bank Account HtmlClient';\n}\n","<div class=\"row\">\n  <div id=\"title\" class=\"col-12 mb-3\">\n    <h1>{{title}}</h1>\n    <h2 class=\"text-muted\">{{subtitle}}</h2>\n  </div>\n</div>\n\n<app-authorized *ngIf=\"s.customer; else authComponents\"></app-authorized>\n\n<ng-template #authComponents>\n  <div class=\"row\">\n    <div class=\"col-12 col-md-6\">\n      <app-login></app-login>\n    </div>\n    <div class=\"col-12 col-md-6 mt-5 mt-md-0\">\n      <app-register></app-register>\n    </div>\n  </div>\n</ng-template>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { FontAwesomeModule, FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\n\nimport { AuthorizedComponent } from './authorized/authorized.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { CustomerInfoComponent } from './customer-info/customer-info.component';\nimport { AccountDetailComponent } from './account-detail/account-detail.component';\nimport { AccountListComponent } from './account-list/account-list.component';\nimport { TransactionListComponent } from './transaction-list/transaction-list.component';\nimport { AccountWithdrawalComponent } from './account-withdrawal/account-withdrawal.component';\nimport { AccountLodgementComponent } from './account-lodgement/account-lodgement.component';\nimport { AccountTransferComponent } from './account-transfer/account-transfer.component';\nimport { AccountNewComponent } from './account-new/account-new.component';\n\nimport { ToastrModule } from 'ngx-toastr';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthorizedComponent,\n    LoginComponent,\n    RegisterComponent,\n    CustomerInfoComponent,\n    AccountDetailComponent,\n    AccountListComponent,\n    TransactionListComponent,\n    AccountWithdrawalComponent,\n    AccountLodgementComponent,\n    AccountTransferComponent,\n    AccountNewComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FontAwesomeModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    ToastrModule.forRoot({\n      preventDuplicates: true,\n      countDuplicates: true,\n      resetTimeoutOnDuplicate: true,\n      positionClass: 'toast-bottom-full-width',\n      progressBar: true,\n      // disableTimeOut: true,\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(library: FaIconLibrary) {\n    library.addIconPacks(fas, far);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SystemService } from '../services/system.service';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n@Component({\n  selector: 'app-authorized',\n  templateUrl: './authorized.component.html',\n  styleUrls: ['./authorized.component.scss'],\n  animations: [\n    trigger('inOutAnimation', [\n      transition(\n        ':enter',\n        [\n          style({\n            opacity: 0,\n            height: 0,\n            display: 'block',\n            transform: 'translateY(1rem)'\n          }),\n          animate('600ms 200ms ease-out',\n            style({\n              opacity: 1,\n              display: 'block',\n              transform: 'translateY(0)',\n            })\n          )\n        ]\n      ),\n      transition(\n        ':leave',\n        [\n          style({\n            opacity: 1,\n            display: 'block',\n            transform: 'translateY(0)',\n          }),\n          animate('200ms 0s ease-in',\n            style({\n              height: 0,\n              opacity: 0,\n              // display: 'block',\n              transform: 'translateY(-1rem)',\n            })\n          )\n        ]\n      )\n    ])\n\n  ]\n})\nexport class AuthorizedComponent implements OnInit {\n\n  constructor(public s: SystemService) { }\n  ngOnInit(): void {\n  }\n\n  public get showing(): string {\n    if (this.s.activeAccount === null) {\n      return 'list';\n    } else if (!this.s.activeAccount.id) {\n      return 'new';\n    } else {\n      return 'details';\n    }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-5 col-lg-3\">\n    <app-customer-info></app-customer-info>\n  </div>\n\n  <div class=\"col-md-7 col-lg-9 mt-4 mt-md-0\">\n    <app-account-list *ngIf=\"showing == 'list'\" [@inOutAnimation]></app-account-list>\n    <app-account-detail *ngIf=\"showing == 'details'\" [@inOutAnimation] [account]=\"s.activeAccount\"></app-account-detail>\n    <app-account-new *ngIf=\"showing == 'new'\" [@inOutAnimation]></app-account-new>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { SystemService } from '../services/system.service';\n\n@Component({\n  selector: 'app-customer-info',\n  templateUrl: './customer-info.component.html',\n  styleUrls: ['./customer-info.component.css']\n})\nexport class CustomerInfoComponent implements OnInit {\n\n  constructor(public s: SystemService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card shadow\">\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">Hi, {{s.customer.name}}!</h5>\n    <p class=\"card-text text-muted\">\n      <fa-icon icon=\"envelope\" [fixedWidth]=\"true\"></fa-icon>\n      {{s.customer.email}}<br />\n      <fa-icon icon=\"id-card\" [fixedWidth]=\"true\"></fa-icon>\n      {{(\"\"+s.customer.id).padStart(5, '0')}}<br />\n      <fa-icon icon=\"map-marker-alt\" [fixedWidth]=\"true\"></fa-icon>\n      {{s.customer.address}}<br />\n    </p>\n    <a href=\"#\" class=\"card-link text-danger\" (click)=\"s.logout()\">\n      <fa-icon icon=\"power-off\" [fixedWidth]=\"true\"></fa-icon>\n      Logout\n    </a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { SystemService } from '../services/system.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form = this.fb.group({\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', Validators.required]\n  });\n\n  constructor(private fb: FormBuilder, public s: SystemService) { }\n  ngOnInit(): void { }\n\n  get email(): any { return this.form.get('email'); }\n  get isEmailInvalid(): any {\n    const e = this.email;\n    return e.invalid && (e.dirty || e.touched);\n  }\n\n  get password(): any { return this.form.get('password'); }\n  get isPasswordInvalid(): any {\n    const e = this.password;\n    return e.invalid && (e.dirty || e.touched);\n  }\n}\n","<div class=\"card shadow\">\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">Login</h5>\n    <form [formGroup]=\"form\" (submit)=\"s.login(form.value)\">\n\n      <div class=\"form-group\">\n        <label for=\"\">Email</label>\n        <input type=\"text\" formControlName=\"email\" class=\"form-control\" [class.is-invalid]=\"isEmailInvalid\">\n        <div *ngIf=\"isEmailInvalid && email.errors.required\" class=\"invalid-feedback\">Email is required.</div>\n        <div *ngIf=\"isEmailInvalid && !email.errors.required\" class=\"invalid-feedback\">Invalid Email format.</div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"\">Password</label>\n        <input type=\"password\" autocomplete=\"off\" formControlName=\"password\" class=\"form-control\" [class.is-invalid]=\"isPasswordInvalid\">\n        <div *ngIf=\"isPasswordInvalid && password.errors.required\" class=\"invalid-feedback\">Password is required.</div>\n      </div>\n\n      <div class=\"form-group\">\n        <input type=\"submit\" value=\"Login\" class=\"btn btn-primary\" [disabled]=\"s.authenticating || this.form.invalid\" />\n      </div>\n\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { SystemService } from '../services/system.service';\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  form = this.fb.group({\n    name: ['', Validators.required],\n    sortCode: ['', Validators.required],\n    address: ['', Validators.required],\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', Validators.required]\n  });\n  constructor(private fb: FormBuilder, public s: SystemService) { }\n\n  ngOnInit(): void { }\n\n  get name(): any { return this.form.get('name'); }\n  get isNameInvalid(): boolean {\n    return this.showInvalidControl(this.name);\n  }\n\n  get sortCode(): any { return this.form.get('sortCode'); }\n  get isSortCodeInvalid(): boolean {\n    return this.showInvalidControl(this.sortCode);\n  }\n\n  get address(): any { return this.form.get('address'); }\n  get isAddressInvalid(): boolean {\n    return this.showInvalidControl(this.address);\n  }\n\n  get email(): any { return this.form.get('email'); }\n  get isEmailInvalid(): boolean {\n    return this.showInvalidControl(this.email);\n  }\n\n  get password(): any { return this.form.get('password'); }\n  get isPasswordInvalid(): boolean {\n    return this.showInvalidControl(this.password);\n  }\n\n  private showInvalidControl(e: FormControl): boolean {\n    return e.invalid && (e.dirty || e.touched);\n  }\n\n}\n","<div class=\"card shadow\">\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">New Customer</h5>\n    <form [formGroup]=\"form\" (submit)=\"s.register(form.value)\">\n\n      <div class=\"form-group\">\n        <label for=\"\">Name</label>\n        <input type=\"text\" formControlName=\"name\" class=\"form-control\" [class.is-invalid]=\"isNameInvalid\">\n        <div *ngIf=\"isNameInvalid && name.errors.required\" class=\"invalid-feedback\">Name is required.</div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"\">Sort Code</label>\n        <input type=\"text\" formControlName=\"sortCode\" class=\"form-control\" [class.is-invalid]=\"isSortCodeInvalid\">\n        <div *ngIf=\"isSortCodeInvalid && sortCode.errors.required\" class=\"invalid-feedback\">Sort Code is required.</div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"\">Address</label>\n        <input type=\"text\" formControlName=\"address\" class=\"form-control\" [class.is-invalid]=\"isAddressInvalid\">\n        <div *ngIf=\"isAddressInvalid && address.errors.required\" class=\"invalid-feedback\">Address is required.</div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"\">Email</label>\n        <input type=\"text\" formControlName=\"email\" class=\"form-control\" [class.is-invalid]=\"isEmailInvalid\">\n        <div *ngIf=\"isEmailInvalid && email.errors.required\" class=\"invalid-feedback\">Email is required.</div>\n        <div *ngIf=\"isEmailInvalid && !email.errors.required\" class=\"invalid-feedback\">Invalid Email format.</div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"\">Password</label>\n        <input type=\"password\" autocomplete=\"off\" formControlName=\"password\" class=\"form-control\" [class.is-invalid]=\"isPasswordInvalid\">\n        <div *ngIf=\"isPasswordInvalid && password.errors.required\" class=\"invalid-feedback\">Password is required.</div>\n      </div>\n\n      <div class=\"form-group\">\n        <input type=\"submit\" value=\"Create Account\" class=\"btn btn-primary\" [disabled]=\"s.authenticating || this.form.invalid\" />\n      </div>\n\n    </form>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ApiAuthService } from '../api/api-auth.service';\nimport { LoginForm } from '../interfaces/login-form';\nimport { RegistrationForm } from '../interfaces/registration-form';\nimport { ApiAccountService } from '../api/api-account.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Transaction } from '../interfaces/transaction';\nimport { Account } from '../interfaces/account';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SystemService {\n  public authenticating = false;\n  public loading = false;\n  public loadingAccounts = false;\n  public customer = null;\n  public accounts = [];\n  public activeAccount = null;\n  public activeForm = null;\n\n  constructor(\n    private authApi: ApiAuthService,\n    private accApi: ApiAccountService,\n    private msg: ToastrService,\n\n  ) {\n    this.authenticating = true;\n    this.authApi.me().subscribe((e) => {\n      this.customer = e;\n      this.authenticating = false;\n      this.loadAccounts();\n    }, (err) => {\n      if (err.status === 0) {\n        this.msg.warning('Server not responding activating FAKE data 🤪🤪🤪');\n        this.mock();\n      }\n      this.authenticating = false;\n    });\n  }\n\n  login = (data: LoginForm) => {\n    if (this.authenticating) {\n      return;\n    }\n\n    this.authenticating = true;\n    this.clearAll();\n\n    this.authApi.login(data.email, data.password).subscribe((e: any) => {\n      this.customer = e;\n      this.loadAccounts();\n      this.authenticating = false;\n      this.msg.success('🤘 awesome!');\n    }, (err) => {\n      this.msg.error('Invalid Email/Password 🚫');\n      this.authenticating = false;\n    });\n  }\n\n  register = (data: RegistrationForm) => {\n    if (this.authenticating) {\n      return;\n    }\n\n    this.authenticating = true;\n    this.clearAll();\n\n    this.authApi.register(data).subscribe((e) => {\n      this.customer = e;\n      this.loadAccounts();\n      this.msg.success('Welcome aboard 👨‍✈️');\n      this.authenticating = false;\n    }, (err) => {\n      this.authenticating = false;\n      this.msg.error('Request not accepted 💩');\n    });\n  }\n\n  logout = () => {\n    this.authApi.logout().subscribe(e => console.log('Logged out!'));\n    this.clearAll();\n    this.msg.info('Your cookie was destroyed');\n  }\n\n  addTransaction(t: Transaction) {\n    if (t == null) {\n      return;\n    }\n\n    const acc = this.findAccountById(t.accountID);\n    if (acc == null) {\n      return;\n    }\n\n    acc.balance = t.postBalance;\n    acc.transactions.push(t);\n  }\n\n  private findAccountById(id: number): Account {\n    for (const acc of this.accounts) {\n      if (+acc.id === +id) {\n        return acc;\n      }\n    }\n\n    return null;\n  }\n\n  private clearAll = () => {\n    this.customer = null;\n    this.accounts = [];\n    this.activeAccount = null;\n    this.activeForm = null;\n  }\n\n  private loadAccounts = () => {\n    if (this.loadingAccounts) {\n      return;\n    }\n\n    this.loadingAccounts = true;\n    this.accApi.index().subscribe((e) => {\n      this.accounts = e as any;\n      this.loadingAccounts = false;\n    }, (err) => {\n      this.loadingAccounts = false;\n    });\n  }\n\n  private loadTransactions = (accountID) => {\n    this.loading = true;\n\n    setTimeout(() => {\n      return this.loading = false;\n    }, 3000);\n  }\n\n  private mock() {\n    this.customer = {\n      address: '25 Talbot St',\n      email: 'john@student.ncirl.ie',\n      id: 1,\n      name: 'John Doe',\n      password: 'Yjk5d53JESdHv5k/rI6Tq/wSkHY=.1GwRmuF4kNs='\n    };\n\n    this.accounts = [\n      {\n        id: 1,\n        customerID: 1,\n        sortCode: '90-30-66',\n        number: '00001',\n        balance: 34.56,\n        title: 'Current Account',\n        transactions: [\n          { id: 123, accountID: 1, type: 'c', created: new Date(2020, 3, 1, 14, 34), amount: 200.00, postBalance: 200.00, description: 'Account opening' },\n          { id: 124, accountID: 1, type: 'c', created: new Date(2020, 3, 5, 14, 34), amount: 20.00, postBalance: 220.00, description: 'Lodgement' },\n          { id: 125, accountID: 1, type: 'd', created: new Date(2020, 3, 6, 10, 20), amount: 123.00, postBalance: 97.00, description: 'Withdrawal' },\n          { id: 126, accountID: 1, type: 'd', created: new Date(2020, 3, 7, 22, 0), amount: 15.00, postBalance: 84.00, description: 'Tesco Stores' },\n          { id: 126, accountID: 1, type: 'd', created: new Date(2020, 3, 9, 10, 0), amount: 49.44, postBalance: 34.56, description: 'Annual Subscription' },\n        ],\n      },\n      {\n        id: 2,\n        customerID: 1,\n        sortCode: '90-30-66',\n        number: '00002',\n        balance: 402.34,\n        title: 'Savings',\n        transactions: [\n          { id: 223, accountID: 2, type: 'c', created: new Date(2020, 1, 1, 10, 0), amount: 200.00, postBalance: 200.00, description: 'Deposit' },\n          { id: 224, accountID: 2, type: 'c', created: new Date(2020, 2, 1, 10, 0), amount: 200.00, postBalance: 400.00, description: 'Deposit' },\n          { id: 225, accountID: 2, type: 'c', created: new Date(2020, 2, 1, 10, 0), amount: 2.34, postBalance: 402.34, description: 'Interest' },\n        ],\n      },\n      {\n        id: 3,\n        customerID: 1,\n        sortCode: '90-30-66',\n        number: '00003',\n        balance: 4024.68,\n        title: 'Investments',\n        transactions: [],\n      },\n      {\n        id: 4,\n        customerID: 1,\n        sortCode: '90-30-66',\n        number: '00004',\n        balance: 76.34,\n        title: 'Other',\n        transactions: [],\n      }\n    ];\n\n    // this.activeAccount = this.accounts[1];\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Account } from '../interfaces/account';\n\n@Component({\n  selector: 'app-transaction-list',\n  templateUrl: './transaction-list.component.html',\n  styleUrls: ['./transaction-list.component.scss']\n})\nexport class TransactionListComponent implements OnInit {\n  @Input() account: Account;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"account-row d-flex justify-content-between align-items-center py-2\" *ngFor=\"let entry of account.transactions\">\n  <div>\n    {{entry.description}}<br />\n    <small class=\"text-white\">{{entry.created | date : 'dd/LL/yyyy HH:mm' }}</small>\n  </div>\n  <div class=\"text-right\">\n    <span class=\"balance\" [class.text-danger]=\"entry.type == 'd'\">\n      <span>{{entry.type == 'c' ? '+' : '-'}}</span>\n      <span>{{entry.amount | currency : 'EUR'}}</span>\n      <br />\n    </span>\n    <small class=\"font-weight-lighter\">{{entry.postBalance | currency : 'EUR'}}</small>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-end align-items-center py-2\">\n  <div class=\"totals mr-3\">Balance</div>\n  <div class=\"totals\">{{account.balance | currency : 'EUR'}}</div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  host: 'http://localhost:49000/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}